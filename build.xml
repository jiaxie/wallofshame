<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="timesheet" basedir="." default="pkg">
    <property name="test.dir" value="app/test"></property>
    <property name="src.dir" value="app/src"></property>
    <property name="server.src.dir" value="server/src"></property>
    <property name="target.dir" value="target"></property>
    <property name="dist.dir" value="dist"></property>

    <property name="compiled.server.dir" value="${target.dir}/server/classes"></property>
    <property name="compiled.src.dir" value="${target.dir}/production/classes"></property>
    <property name="compiled.test.dir" value="${target.dir}/test/classes"></property>

    <property name="pkg.tomcat.war.name" value="${ant.project.name}.war"/>

    <path id="source.lib.classpath">
        <fileset dir="app/webapp/WEB-INF/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="compile.source.classpath">
        <path refid="source.lib.classpath"></path>
    </path>


    <path id="server.source.classpath">
        <fileset dir="server/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="compile.test.classpath">
        <fileset dir="app/lib">
            <include name="**/*.jar"/>
        </fileset>
        <path refid="compile.source.classpath"></path>
        <pathelement location="${dist.dir}/wallofshame.jar"/>
    </path>

    <path id="run.test.classpath">
        <path refid="compile.test.classpath"></path>
        <pathelement location="${compiled.test.dir}"/>
    </path>


    <target name="prepare">
        <delete dir="${target.dir}"/>
        <delete dir="${dist.dir}"/>
        <mkdir dir="${compiled.src.dir}"/>
        <mkdir dir="${compiled.test.dir}"/>
        <mkdir dir="${compiled.server.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/expanded"/>
    </target>

    <target name="compile.src" depends="prepare">
        <javac srcdir="${src.dir}" destdir="${compiled.src.dir}" classpathref="compile.source.classpath">
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="compile.server" depends="prepare">
        <javac srcdir="${server.src.dir}" destdir="${compiled.server.dir}"
               classpathref="server.source.classpath">
            <include name="**/*.java"/>
        </javac>
        <jar destfile="${dist.dir}/start.jar">
            <fileset dir="${compiled.server.dir}"/>
            <zipfileset includes="**/*" src="server/lib/commons-io-2.0.1.jar"/>
            <zipfileset includes="**/*" src="server/lib/jetty-6.1.26.jar"/>
            <zipfileset includes="**/*" src="server/lib/jetty-util-6.1.26.jar"/>
            <zipfileset includes="**/*" src="server/lib/servlet-api-2.5-20081211.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.wallofshame.WallOfShameServer"/>
            </manifest>
        </jar>
    </target>

    <target name="compile.test" depends="prepare,jar.source">
        <javac srcdir="${test.dir}" destdir="${compiled.test.dir}" classpathref="compile.test.classpath">
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="run.test" depends="compile.test" description="execute the tests">
        <junit>
            <classpath refid="run.test.classpath"/>
            <batchtest>
                <fileset dir="${compiled.test.dir}"/>
            </batchtest>
            <formatter type="plain" usefile="false"/>
        </junit>
    </target>

    <target name="jar.source" depends="compile.src">
        <jar destfile="${dist.dir}/wallofshame.jar"
             basedir="${compiled.src.dir}"
                />
    </target>


    <target name="pkg" depends="compile.server, jar.source">
        <copy file="${dist.dir}/start.jar" todir="${dist.dir}/expanded"/>
        <copy todir="${dist.dir}/expanded/wallofshame">
            <fileset dir="app/webapp">
                <include name="**/*"/>
                <exclude name="**/classes/**/*"/>
            </fileset>
        </copy>
        <copy file="${dist.dir}/wallofshame.jar" todir="${dist.dir}/expanded/wallofshame/WEB-INF/lib"/>
    </target>

    <target name="pkg.tomcat.war" depends="pkg">
        <war destfile="${dist.dir}/tomcat/${pkg.tomcat.war.name}" basedir="${dist.dir}/expanded/wallofshame"
             excludes="**/lib/servlet-api-2.5-20081211.jar"/>
    </target>


    <target name="clean.dist">
        <delete dir="${dist.dir}"/>
    </target>

    <target name="s" depends="pkg">
        <java dir="dist/expanded" jar="dist/expanded/start.jar" fork='true'>
            <sysproperty key="url" value="http://deadlock.netbeans.org/hudson/api/xml"></sysproperty>
            <sysproperty key="env" value="production"></sysproperty>
        </java>
    </target>

    <target name="rea">
        <java dir="dist/expanded" jar="dist/expanded/start.jar" fork='true'>
            <sysproperty key="url" value="http://10.113.192.70:9080/api/xml"></sysproperty>
            <sysproperty key="env" value="production"></sysproperty>
        </java>
    </target>

    <target name="deploy.tomcat" depends="pkg.tomcat.war, input.credential">

        <scp file="${dist.dir}/tomcat/${pkg.tomcat.war.name}"
             todir="${serverUsername}@10.18.8.76:/cygdrive/c/"
             password="${serverPassword}"/>

        <sshexec host="10.18.8.76"
                 username="${serverUsername}"
                 password="${serverPassword}"
                 command="cp /cygdrive/c/${pkg.tomcat.war.name} /cygdrive/c/Program\ Files/apache-tomcat-6.0.35/webapps/${pkg.tomcat.war.name}"/>

    </target>

    <condition property="credential.present">
        <and>
            <isset property="serverUsername"/>
            <isset property="serverPassword"/>
        </and>
    </condition>


    <target name="input.credential" unless="credential.required">
        <input message="please input server username:" addproperty="serverUsername"/>
        <input message="please input server password:" addproperty="serverPassword"/>
    </target>

</project>