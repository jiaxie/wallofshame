<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="timesheet" basedir="." default="pkg">
    <property name="test.dir" value="app/test"></property>
    <property name="src.dir" value="app/src"></property>
    <property name="server.src.dir" value="server/src"></property>
    <property name="target.dir" value="target"></property>
    <property name="dist.dir" value="dist"></property>

    <property name="compiled.server.dir" value="${target.dir}/server/classes"></property>
    <property name="compiled.src.dir" value="${target.dir}/production/classes"></property>
    <property name="compiled.test.dir" value="${target.dir}/test/classes"></property>

    <property name="pkg.tomcat.war.name" value="${ant.project.name}.war"/>
    <property name="pkg.tomcat.dir" value="${dist.dir}/tomcat"/>
    <property name="tomcat.contextPath" value="/${ant.project.name}" />
    <property name="tomcat.manager.url" value="http://10.18.8.76:8080/manager"/>
    <property name="tomcat.username" value="tomcat"/>
    <property name="tomcat.password" value="tomcat"/>

    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"/>
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>

    <path id="source.lib.classpath">
        <fileset dir="app/webapp/WEB-INF/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="compile.source.classpath">
        <path refid="source.lib.classpath"></path>
    </path>


    <path id="server.source.classpath">
        <fileset dir="server/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="compile.test.classpath">
        <fileset dir="app/lib">
            <include name="**/*.jar"/>
        </fileset>
        <path refid="compile.source.classpath"></path>
        <pathelement location="${dist.dir}/timesheet.jar"/>
    </path>

    <path id="run.test.classpath">
        <path refid="compile.test.classpath"></path>
        <pathelement location="${compiled.test.dir}"/>
    </path>


    <target name="prepare">
        <delete dir="${target.dir}"/>
        <delete dir="${dist.dir}"/>
        <mkdir dir="${compiled.src.dir}"/>
        <mkdir dir="${compiled.test.dir}"/>
        <mkdir dir="${compiled.server.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/expanded"/>
    </target>

    <target name="compile.src" depends="prepare">
        <javac srcdir="${src.dir}" destdir="${compiled.src.dir}" classpathref="compile.source.classpath">
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="compile.server" depends="prepare">
        <javac srcdir="${server.src.dir}" destdir="${compiled.server.dir}"
               classpathref="server.source.classpath">
            <include name="**/*.java"/>
        </javac>
        <jar destfile="${dist.dir}/start.jar">
            <fileset dir="${compiled.server.dir}"/>
            <zipfileset includes="**/*" src="server/lib/commons-io-2.0.1.jar"/>
            <zipfileset includes="**/*" src="server/lib/jetty-6.1.26.jar"/>
            <zipfileset includes="**/*" src="server/lib/jetty-util-6.1.26.jar"/>
            <zipfileset includes="**/*" src="server/lib/servlet-api-2.5-20081211.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.wallofshame.WallOfShameServer"/>
            </manifest>
        </jar>
    </target>

    <target name="compile.test" depends="prepare,jar.source">
        <javac srcdir="${test.dir}" destdir="${compiled.test.dir}" classpathref="compile.test.classpath">
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="run.test" depends="compile.test" description="execute the tests">
        <junit>
            <classpath refid="run.test.classpath"/>
            <batchtest>
                <fileset dir="${compiled.test.dir}"/>
            </batchtest>
            <formatter type="plain" usefile="false"/>
        </junit>
    </target>

    <target name="jar.source" depends="compile.src">
        <jar destfile="${dist.dir}/timesheet.jar"
             basedir="${compiled.src.dir}"
                />
    </target>


    <target name="pkg.expanded" depends="compile.server, jar.source">
        <copy file="${dist.dir}/start.jar" todir="${dist.dir}/expanded"/>
        <copy todir="${dist.dir}/expanded/timesheet">
            <fileset dir="app/webapp">
                <include name="**/*"/>
                <exclude name="**/classes/**/*"/>
            </fileset>
        </copy>
        <copy file="${dist.dir}/timesheet.jar" todir="${dist.dir}/expanded/timesheet/WEB-INF/lib"/>
    </target>

    <target name="pkg" depends="pkg.expanded,tag">
    </target>

    <target name="tag" depends="git.revision">
        <filter token="revision" value="${repository.version}" />
        <echo message="current revision: ${repository.version}" />
        <copy filtering="true" file="${dist.dir}/expanded/timesheet/WEB-INF/ftls/includes/revision.ftl" tofile="${dist.dir}/expanded/timesheet/WEB-INF/ftls/includes/revision.ftl.tmp"  />
        <delete file="${dist.dir}/expanded/timesheet/WEB-INF/ftls/includes/revision.ftl" ></delete>
        <move file="${dist.dir}/expanded/timesheet/WEB-INF/ftls/includes/revision.ftl.tmp" tofile="${dist.dir}/expanded/timesheet/WEB-INF/ftls/includes/revision.ftl" />
    </target>

    <target name="pkg.tomcat.war" depends="pkg">
        <war destfile="${pkg.tomcat.dir}/${pkg.tomcat.war.name}" basedir="${dist.dir}/expanded/timesheet"
             excludes="**/lib/servlet-api-2.5-20081211.jar"/>
    </target>


    <target name="clean.dist">
        <delete dir="${dist.dir}"/>
    </target>

    <target name="deploy.tomcat" if="timesheet.war.present">
        <echo message="deploying to ${tomcat.manager.url}"/>
        <deploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}"
                path="${tomcat.contextPath}" war="file:${pkg.tomcat.dir}/${pkg.tomcat.war.name}"/>
    </target>

    <target name="undeploy.tomcat" >
        <echo message="undeploying /${ant.project.name}"/>
        <undeploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}"   failonerror="false"
                  path="${tomcat.contextPath}"/>
    </target>

    <target name="redeploy.tomcat" depends="undeploy.tomcat,deploy.tomcat">
    </target>

    <available property="timesheet.war.present" file="${pkg.tomcat.dir}/${pkg.tomcat.war.name}" type="file"/>

    <target name="go" depends="pkg.tomcat.war, redeploy.tomcat" description="one key to deploy application automatically.">
    </target>


    <available file=".git" type="dir" property="git.present"/>

    <tstamp/>

    <target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
            <arg value="describe"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <condition property="repository.version" value="${git.revision}.${DSTAMP}${TSTAMP}" else="unknown">
            <and>
                <isset property="git.revision"/>
                <length string="${git.revision}" trim="yes" length="0" when="greater"/>
            </and>
        </condition>
    </target>


    <target name="start" depends="pkg">
        <java dir="dist/expanded" jar="dist/expanded/start.jar" fork='true'>
            <sysproperty key="env" value="production"></sysproperty>
        </java>
    </target>

</project>